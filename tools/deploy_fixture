#!/usr/bin/env python
import argparse
import gooddata
import logging

import sys


def arg_parser():
    parser = argparse.ArgumentParser(
        description="Deploy fixture to GoodData environment"
    )
    parser.add_argument(
        "fixture",
        help="path to fixture directory",
        type=gooddata.Fixture
    )
    parser.add_argument(
        "baseurl",
        help="GoodData base URL"
    )
    parser.add_argument(
        "-u",
        "--username",
        default='bear@gooddata.com',
        help="GoodData user name"
    )
    parser.add_argument(
        "-p",
        "--password",
        default='jindrisska',
        help="GoodData user password"
    )
    parser.add_argument(
        "-pg",
        "--project-group",
        default='pgroup2',
        help="GoodData project group"
    )
    parser.add_argument(
        "-d",
        "--driver",
        default='Pg',
        help="GoodData driver"
    )
    parser.add_argument(
        "-e",
        "--project-environment",
        default='TESTING',
        choices=['PRODUCTION', 'TESTING', 'DEVELOPMENT'],
        help="project environment"
    )
    parser.add_argument(
        "-t",
        "--project-title",
        default='Fixture project',
        help="project title"
    )
    parser.add_argument(
        "-l",
        "--log-level",
        default='WARN',
        choices=['ERROR', 'WARN', 'INFO', 'DEBUG'],
        help="Log level"
    )
    return parser


def main(args):
    logging.basicConfig(
        level=args.log_level,
        format='%(asctime)s %(levelname)s %(message)s'
    )
    logging.info("Deploying fixture {}".format(args.fixture))
    gooddata.GoodData(
        baseurl=args.baseurl,
        login=args.username,
        password=args.password
    ).deploy_fixture(
        args.fixture,
        args.project_title,
        pgroup=args.project_group,
        driver=args.driver
    )


if __name__ == '__main__':
    try:
        cmd_args = arg_parser().parse_args(args=sys.argv[1:] or ["--help"])
    except Exception, e:
        sys.stderr.write("%s\n" % (e,))
        sys.exit(1)
    else:
        sys.exit(main(cmd_args))
